/* QUESTS */

.questRoot > * {
	opacity: 0;
	animation: fadeIn 500ms 1 linear forwards;
}

.preventOverflow {
	overflow: hidden;
	max-height: calc(100vh - 40px);
	max-width: calc(100vw - 40px);
}

.titleBar > h1 {
	text-align: center;
}

.titleBar {
	margin-top: 2rem;
	border-top: 1px solid black;
	border-bottom: 1px solid black;
}

.blockMenu {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	gap: min(3rem, 2vw);
	margin-top: 3rem;
}

.questElement {
	width: 18.75rem;
	height: 14.37rem;
	position: relative;
	border-radius: 20px;
	display: flex;
	flex-flow: column nowrap;
	justify-content: center;
	justify-self: center;
	align-self: center;
	align-items: center;
	background-color: wheat;
	border: 1px black solid;
	transition: box-shadow 200ms linear;
	position: relative;
	cursor: pointer;
}

.questElement img {
	flex-grow: 1;
	//	width: 100%;
	height: 180px;
}

.questElement.blocked img {
	width: 30%;
	height: auto;
}

.questElement:not(.blocked):hover {
	box-shadow: 10px 10px 20px 5px gray;
}

.questElement.blocked {
	cursor: not-allowed;
	background-color: linear-gradient(black 80%, transparent 95%);
}

.questElemAnimation {
	z-index: 5;
	animation: questElementAnim 800ms 1 linear forwards;
}

.questElemAnimation::before {
	content: "";
	position: absolute;
	width: 100%;
	height: 100%;
	border-radius: 20px;
	opacity: 0;
	border: 1px black solid;
	background-color: wheat;
	animation: questElemAnimBack 500ms 1 linear forwards;
	animation-delay: 500ms;
	z-index: 5;
}

.questText h3 {
	text-align: start;
	font-size: 1.7rem;
	max-width: 40rem;
	margin-top: 2rem;
}

.questModelCont {
	position: relative;
	width: 30rem;
	height: 60rem;
	margin-top: 0;
}

.questCode {
	display: flex;
}

.codingModelCont {
	max-height: 30rem;
	overflow: hidden;
}

.questModelCont > canvas {
	position: absolute;
	top: 0;
	width: 100%;
	height: 100%;
}
.cssRenderer {
	overflow: visible !important;
}

.questModelCont > div {
	position: absolute;
	top: 0;
	width: 100% !important;
	height: 100% !important;
}

.questModelCont > div > h1 {
	font-size: 1rem;
	max-width: 5rem;
}

.questTransitionFadeOut * {
	opacity: 0 !important;
	transition: opacity 200ms linear;
	transition: backgroud-color 300ms linear;
}

.questTransitionFadeIn * {
	opacity: 1 !important;
	transition: opacity 200ms linear;
	transition: box-shadow 50ms linear;
}

.questProblemCont {
	display: flex;
	justify-content: center;
	/* align-items: center; */
}
.questText h2 {
	font-size: 2rem;
}

.questText p {
	font-size: 1.5rem;
	line-height: 2rem;
}

.questText {
	margin-left: 3rem;
	width: 40vw;
}
.questText button {
	cursor: pointer;
	padding: 0.5rem 2rem;
	font-size: large;
	border-radius: 10px;
}
.questText button:hover {
	box-shadow: 2px 2px 0 0 black;
	transform: translate(-2px, -2px);
}
.questObjetives {
	display: flex;
	justify-content: center;
}

.questObjetivesCont {
	padding: 1rem;
}
.questObjetivesCont p {
	font-family: cursive;
	cursor: pointer;
	padding: 1rem;
	font-size: 1.4rem;
	font-weight: 500;
	text-align: center;
	border: 5px gray solid;
	border-radius: 20px;
	width: 30rem;
	height: 5rem;
	background-color: white;
	margin: 2rem;
	transition: all 200ms linear;
}
.questObjetivesCont p:hover {
	border-color: black;
}

.questObjectiveIncorrect p {
	border-color: rgb(189, 0, 0);
	color: red;

	/* background-color: rgb(255, 145, 145); */
}
.questObjectiveIncorrect {
	animation: questObjectiveIncorrectAnim 500ms 1 forwards ease-in-out;
}
.questObjectiveIncorrect p:hover {
	border-color: rgb(189, 0, 0);
}

.questObjectiveCorrect {
	animation: questObjectiveCorrectAnim 500ms 1 forwards ease-in-out;
}
.questObjectiveCorrect p {
	border-color: rgb(19, 189, 0);
	color: green;
}
.questObjectiveCorrect p:hover {
	border-color: rgb(19, 189, 0);
}
.questObjetiveBtn {
	transform: scaleX(0);
	transition: transform 1s linear;
}

.questLabel {
	position: relative;
	display: flex;
	align-items: center;
}

.labelRight {
	flex-flow: row-reverse;
	left: 45%;
	top: -5rem;
}

.labelRight > .labelVector {
	transform: rotateY(180deg) rotateX(180deg);
}

.labelLeft {
	right: 55%;
	top: 5rem;
}

.labelVector {
	width: 20rem;
	height: 10rem;
}

.labelVector > svg {
	width: 100%;
	height: 100%;
	animation: labelVectorAnim 300ms 1 linear forwards;
}

.labelText {
	display: flex;
	justify-content: center;
	align-items: center;

	width: 8rem;
	height: 3rem;
	padding: 1rem;
	border: 3px black solid;
	animation: labelAnim 100ms 1 forwards ease-in-out;
	animation-delay: 300ms;
	transform: scaleX(0);
	z-index: 3;
	border-radius: 5px;
	background-color: white;
}

.labelText p {
	font-size: 0.8rem;
	font-weight: 600;
	margin: 0.2rem;
}

.labelNextBtn {
	width: 100px;
	height: 100px;
}

.howItWorksBtn {
	position: absolute;
	bottom: 2rem;
	right: 2rem;
	z-index: 3;
}

/* QUEST ALGORITHM */
.questAlgorithm {
	display: flex;
	overflow: hidden;
}
.algorithmCoding {
	min-width: 66vw;
}

.algorithmTitle {
	margin-left: 5rem;
	min-height: 2.5rem;
}

.algorithmCont {
	width: 20vw;
	height: 65vh;
}

/*  */
/* BLOCK */
.algorithmBlock {
	position: absolute;
	z-index: 10;
	width: fit-content;
	height: fit-content;
}

.algorithmBlock > div {
	transition: transform 100ms linear;
	transition: background-color 300ms linear;
}

.grabbingBlock {
	transform: scale(1.2);
	z-index: 5;
}

.algorithmBlock > div {
	z-index: 10;
	cursor: grab;
}

.algorithmBlock p {
	text-align: center;
	font-weight: 600;
	display: flex;
	flex-flow: column nowrap;
}

.simpleBlock {
	display: flex;
	flex-flow: column nowrap;
	justify-content: center;
	align-items: center;
}

.simpleBlock > div {
	width: 16.3rem;
	height: 4.2rem;
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: 20px;
	border: 3px black solid;
	background-color: #6096ff;
}

.wrongBlock {
	background-color: red !important;
}

.wrongArrow {
	stroke: red;
}

/* CONDITIONAL BLOCK */
.conditionalBlock {
	display: flex;
	justify-content: center;
	align-items: top;
}

.conditionalBody {
	background-color: aqua;
	display: flex;
	justify-content: center;
	align-items: center;
	clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
	background-color: black;
	width: 16.9rem;
	height: 6.82rem;
	padding: 0.1rem 0.2rem;
}

.conditionalBorder {
	width: 16.9rem;
	height: 6.82rem;
	display: flex;
	justify-content: center;
	align-items: center;
	clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
	background-color: #76ff60;
}

.conditionalCont {
	width: 12rem;
	height: 4rem;
	display: flex;
	justify-content: center;
	align-items: center;
}

.algoCursor {
	position: absolute;
	width: 30px;
	opacity: 0;
	z-index: 10;
	animation: fadeIn 500ms linear 1;
	transition: opacity 500ms linear;
}

.algoCursorDisappear {
	opacity: 0 !important;
}

.algoCursor > img {
	width: 100%;
	height: 100%;
}

/* REPEAT BLOCK */
/* .repeatBlock {
	display: flex;
	justify-content: center;
	align-items: center;
} */
.repeatBlock > div {
	border-radius: 100%;
	height: 6rem;
	width: 6rem;
	background-color: #f3f630;
	border: 3px black solid;
	display: flex;
	justify-content: center;
	align-items: center;
}

.arrow {
	fill: none;
	stroke: black;
	stroke-width: 3;
	fill: none;
	stroke-linecap: round;
	/* stroke-dasharray: 50;
	stroke-dashoffset: 50; */
	/* animation: arrowPrueba 1s linear infinite; */
}

.arrow > path {
	fill: none;
	/* transition: stroke-dashoffset 1s linear; */
}

.blockArrow {
	height: 2.6rem;
	width: auto;
}

.conditionalArrow,
.conditionalArrowR {
	position: relative;
	bottom: 0.8rem;
	width: 6.3rem;
	height: auto;
}
.conditionalArrow {
	right: 0.7rem;
}

.conditionalArrowR {
	left: 0.7rem;
	transform: rotateY(180deg);
}

.conditionalNo > p,
.conditionalYes > p {
	transition: opacity 200ms linear;
}

.conditionalYes,
.conditionalNo {
	position: relative;
	top: 1rem;
}

.hideText {
	opacity: 0 !important;
}

.arrowLabelActive {
	opacity: 1 !important;
}

/* .arrowCont > svg {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}
.arrowCont path {
	width: 100%;
	height: 100%;
}
.arrowCont path {
	fill: black;
	stroke: black;
} */
/*  */

/* CODING SECTION */

.blockMenuCont {
	position: relative;
	width: 55px;
	height: 100%;
	display: inline-flex;
	flex-flow: column nowrap;
	justify-content: flex-start;
	align-items: center;
	box-shadow: 1px 0 2px black;
}
.blockMenuItem {
	position: relative;
	width: 100%;
	height: 60px;
	margin: 5px 0;
	display: flex;
	flex-flow: column nowrap;
	justify-content: center;
	align-items: center;
}
.blockMenuItem:hover {
	cursor: pointer;
	background-color: #c9b6c9;
}
.blockMenuItemCircle {
	position: relative;
	width: 25px;
	height: 25px;
	border-radius: 25px;
	box-shadow: inset 0 0 3px black;
}
.blockMenuItem > a {
	font-size: 12px;
	margin: 3px 0 0 0;
}

.blockCont {
	position: relative;
	width: 40rem;
	height: 30rem;
	padding: 0 0 0 10px;
	display: inline-flex;
	flex-flow: column nowrap;
	justify-content: flex-start;
	align-items: flex-start;
	overflow-y: scroll;
	overflow-x: hidden;
	box-shadow: inset 0 0 3px black;
}

.blockCodingSpace {
	display: flex;
}

.questButton {
	cursor: pointer;
	padding: 0.5rem 2rem;
	font-size: large;
	height: fit-content;
	border-radius: 10px;
}

.questCodeCont {
	max-height: ;
}

.questCodeButton:hover {
	box-shadow: 2px 2px 0 0 black;
	transform: translate(-2px, -2px);
}

.questCodeButtonCont {
	display: flex;
	justify-content: center;
	align-items: center;
}

.questCodeButtonCont > button {
	margin: 2rem;
}

.questCongratulationsContainer {
	display: flex;
	justify-content: center;
}
.questCongratulationsBtnCont {
	text-align: center;
}
.questCongratulationsBtnCont > * {
	margin: 2rem;
}
.questCongratulationsBtnCont > button {
	cursor: pointer;
	max-width: 10rem;
	padding: 0.5rem 2rem;
	font-size: large;
	height: fit-content;
	border-radius: 10px;
	font-weight: 700;
}
.questCongratulationsBtnCont > button:hover {
	box-shadow: 2px 2px 0 0 black;
	transform: translate(-2px, -2px);
}

/* .blockMenuCont {
	position: relative;
	width: 55px;
	height: 100%;
	display: inline-flex;
	flex-flow: column nowrap;
	justify-content: flex-start;
	align-items: center;
	box-shadow: 1px 0 2px black;
}
.blockMenuItem {
	position: relative;
	width: 100%;
	height: 60px;
	//  margin: 5px 0;
	display: flex;
	flex-flow: column nowrap;
	justify-content: center;
	align-items: center;
}
.blockMenuItem:hover {
	cursor: pointer;
	background-color: #c9b6c9;
} */

@keyframes questElementAnim {
	from {
		transform: rotateY(0) scale(1);
	}
	50% {
		transform: rotateY(90deg) scale(5);
	}
	to {
		transform: rotateY(180deg) scale(15);
	}
}

@keyframes questElemAnimBack {
	from {
		opacity: 0;
	}
	50% {
		opacity: 1;
	}
	to {
		opacity: 1;
	}
}
@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes fadeOut {
	from {
		opacity: 1;
	}
	to {
		opacity: 0;
	}
}

@keyframes questObjectiveIncorrectAnim {
	from {
		transform: rotateZ(0deg);
	}
	10% {
		transform: rotateZ(-5deg);
	}
	20% {
		transform: rotateZ(5deg);
	}
	30% {
		transform: rotateZ(-10deg);
	}
	40% {
		transform: rotateZ(10deg);
	}
	50% {
		transform: rotateZ(-5deg);
	}
	60% {
		transform: rotateZ(5deg);
	}
	70% {
		transform: rotateZ(-2deg);
	}
	80% {
		transform: rotateZ(2deg);
	}
	90% {
		transform: rotateZ(-1deg);
	}

	100% {
		transform: rotateZ(0deg);
	}
}

@keyframes questObjectiveCorrectAnim {
	from {
		transform: translateY(0%) rotateZ(0deg);
	}

	50% {
		transform: translateY(-300%) rotateZ(180deg);
	}

	to {
		transform: translateY(0%) rotateZ(360deg);
	}
}
@keyframes labelVectorAnim {
	from {
		stroke-dasharray: 200;
		stroke-dashoffset: 200;
	}

	to {
		stroke-dasharray: 200;
		stroke-dashoffset: 0;
	}
}

@keyframes labelAnim {
	from {
		transform: scale(0);
	}

	to {
		transform: scale(1);
	}
}
